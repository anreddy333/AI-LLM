pipeline {
    agent any

    environment {
        VENV_PATH = './venv'
    }

    stages {
        stage('Setup') {
            steps {
                script {
                    try {
                        sh '''
                            # Use bash to support "source"
                            bash -c "
                                sudo apt-get update &&
                                sudo apt-get install -y curl python3-venv &&
                                python3 -m venv ${VENV_PATH} &&
                                source ${VENV_PATH}/bin/activate
                            "
                        '''
                    } catch (err) {
                        currentBuild.result = 'FAILURE'
                        error("Setup stage failed: ${err}")
                    }
                }
            }
        }

        stage('Test') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo 'Running tests...'
                // Add your test commands here
            }
        }

        stage('LLM Triage') {
            when {
                expression { currentBuild.result == 'FAILURE' }
            }
            steps {
                script {
                    def failureMessage = """
                    Failure Stage: ${env.STAGE_NAME}
                    Root Cause: Jenkins pipeline failed due to unknown reason.

                    Recommended Fix:
                    1. Check the Jenkins server logs for any error messages or exceptions.
                    2. Verify that necessary plugins/dependencies are installed.
                    3. Ensure Jenkins server resources (CPU, memory) are sufficient.
                    """

                    writeFile file: 'llm-triage-result.txt', text: failureMessage

                    def response = httpRequest acceptType: 'APPLICATION_JSON',
                        contentType: 'APPLICATION_JSON',
                        httpMode: 'POST',
                        requestBody: "{\"prompt\": \"${failureMessage}\"}",
                        url: 'http://10.1.148.59:5000/generate'

                    echo "LLM Response: ${response.content}"
                    writeFile file: 'llm-response.txt', text: response.content
                    archiveArtifacts artifacts: 'llm-response.txt'
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/*.txt'
            cleanWs()
        }
    }
}
